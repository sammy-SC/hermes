(window.webpackJsonp=window.webpackJsonp||[]).push([[16],{57:function(e,a,t){"use strict";t.r(a),t.d(a,"frontMatter",function(){return s}),t.d(a,"rightToc",function(){return l}),t.d(a,"default",function(){return c});t(0);var n=t(80);function r(){return(r=Object.assign||function(e){for(var a=1;a<arguments.length;a++){var t=arguments[a];for(var n in t)Object.prototype.hasOwnProperty.call(t,n)&&(e[n]=t[n])}return e}).apply(this,arguments)}function i(e,a){if(null==e)return{};var t,n,r=function(e,a){if(null==e)return{};var t,n,r={},i=Object.keys(e);for(n=0;n<i.length;n++)t=i[n],a.indexOf(t)>=0||(r[t]=e[t]);return r}(e,a);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(n=0;n<i.length;n++)t=i[n],a.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(r[t]=e[t])}return r}var s={id:"modules",title:"Modules"},l=[{value:"Metadata Format",id:"metadata-format",children:[{value:"Example Metadata File",id:"example-metadata-file",children:[]}]},{value:"Require system",id:"require-system",children:[]},{value:"Source maps",id:"source-maps",children:[]}],o={rightToc:l},b="wrapper";function c(e){var a=e.components,t=i(e,["components"]);return Object(n.b)(b,r({},o,t,{components:a,mdxType:"MDXLayout"}),Object(n.b)("h1",null,Object(n.b)("a",r({parentName:"h1"},{"aria-hidden":!0,className:"anchor",id:"hermes-modules"})),Object(n.b)("a",r({parentName:"h1"},{"aria-hidden":!0,className:"hash-link",href:"#hermes-modules"}),"#"),"Hermes Modules"),Object(n.b)("p",null,"In which we describe the module system and metadata input."),Object(n.b)("h2",null,Object(n.b)("a",r({parentName:"h2"},{"aria-hidden":!0,className:"anchor",id:"metadata-format"})),Object(n.b)("a",r({parentName:"h2"},{"aria-hidden":!0,className:"hash-link",href:"#metadata-format"}),"#"),"Metadata Format"),Object(n.b)("p",null,"In order to provide a directory or zipfile to Hermes,\nit must contain a ",Object(n.b)("inlineCode",{parentName:"p"},"metadata.json")," file at the root."),Object(n.b)("p",null,"The ",Object(n.b)("inlineCode",{parentName:"p"},"metadata.json")," file must be a JSON object, with the following fields:"),Object(n.b)("ul",null,Object(n.b)("li",{parentName:"ul"},Object(n.b)("inlineCode",{parentName:"li"},"segments"),Object(n.b)("ul",{parentName:"li"},Object(n.b)("li",{parentName:"ul"},'An object with string keys representing integers, which are the segments\nIDs. The IDs are generally sequential but there can be gaps (ex. having IDs\n"6" and "8" and no "7"). ID zero has special meaning, this is the "main\nsegment" that gets loaded on startup (ex. when React Native starts).'),Object(n.b)("li",{parentName:"ul"},"Each value must be an array containing file paths\nof the files to place into that segment, expressed relative to the root of\nthe ZIP file (ex. ",Object(n.b)("inlineCode",{parentName:"li"},"subdir/foo.js"),"). File paths may include ",Object(n.b)("inlineCode",{parentName:"li"},"./")," at the start,\nbut they are not required to."),Object(n.b)("li",{parentName:"ul"},"The first element of ",Object(n.b)("inlineCode",{parentName:"li"},'segments["0"]')," is the first module ",Object(n.b)("inlineCode",{parentName:"li"},"require"),"d at run time."))),Object(n.b)("li",{parentName:"ul"},Object(n.b)("inlineCode",{parentName:"li"},"resolutionTable")," (Optional)",Object(n.b)("ul",{parentName:"li"},Object(n.b)("li",{parentName:"ul"},"An object for which the keys are relative file names\n(the same file names as in ",Object(n.b)("inlineCode",{parentName:"li"},"segments"),")."),Object(n.b)("li",{parentName:"ul"},"Values are objects which map from strings given to ",Object(n.b)("inlineCode",{parentName:"li"},"require()"),"\nto their actual resolved file path relative to the directory or zip file root.\nThese relative paths should be the same as in ",Object(n.b)("inlineCode",{parentName:"li"},"segments"),", with leading ",Object(n.b)("inlineCode",{parentName:"li"},"./"),".")))),Object(n.b)("h3",null,Object(n.b)("a",r({parentName:"h3"},{"aria-hidden":!0,className:"anchor",id:"example-metadata-file"})),Object(n.b)("a",r({parentName:"h3"},{"aria-hidden":!0,className:"hash-link",href:"#example-metadata-file"}),"#"),"Example Metadata File"),Object(n.b)("pre",null,Object(n.b)("code",r({parentName:"pre"},{className:"language-js"}),'{\n  "segments": {\n    "0": [\n      "./cjs-subdir-main.js",\n      "cjs-subdir-2.js",\n      "bar/cjs-subdir-bar.js",\n      "foo/cjs-subdir-foo.js"\n    ]\n  },\n  "resolutionTable": {\n    "./cjs-subdir-main.js": {\n      "foo": "./foo/cjs-subdir-foo.js"\n    },\n    "./foo/cjs-subdir-foo.js": {\n      "bar": "./bar/cjs-subdir-bar.js"\n    }\n  }\n}\n')),Object(n.b)("h2",null,Object(n.b)("a",r({parentName:"h2"},{"aria-hidden":!0,className:"anchor",id:"require-system"})),Object(n.b)("a",r({parentName:"h2"},{"aria-hidden":!0,className:"hash-link",href:"#require-system"}),"#"),"Require system"),Object(n.b)("p",null,"Modules can require each other using the ",Object(n.b)("inlineCode",{parentName:"p"},"require")," function provided as a local\nvariable by the runtime. The argument to ",Object(n.b)("inlineCode",{parentName:"p"},"require")," must be an absolute path\nwhich root is the root of the ZIP file or input directory. For example:"),Object(n.b)("pre",null,Object(n.b)("code",r({parentName:"pre"},{className:"language-js"}),"const Foo = require('/subdir/foo.js');\n\nFoo.doSmth();\n")),Object(n.b)("h2",null,Object(n.b)("a",r({parentName:"h2"},{"aria-hidden":!0,className:"anchor",id:"source-maps"})),Object(n.b)("a",r({parentName:"h2"},{"aria-hidden":!0,className:"hash-link",href:"#source-maps"}),"#"),"Source maps"),Object(n.b)("p",null,"Each JavaScript file can optionally provide a corresponding source map, which is\nthe name of the source file with the suffix ",Object(n.b)("inlineCode",{parentName:"p"},".map"),". For example ",Object(n.b)("inlineCode",{parentName:"p"},"subdir/foo.js"),"\nmight provide a ",Object(n.b)("inlineCode",{parentName:"p"},"subdir/foo.js.map")," file."))}c.isMDXComponent=!0}}]);